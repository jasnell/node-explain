{
  "_pattern": "^DEP\\d{4}$",
  "_base_url": "https://nodejs.org/dist/latest/docs/api/deprecations.html",

  "DEP0001": {
    "en": "http.OutgoingMessage.prototype.flush\n\nType: Runtime\n\nThe OutgoingMessage.prototype.flush() method is deprecated. Use OutgoingMessage.prototype.flushHeaders() instead."
  },

  "DEP0002": {
    "en": "require('_linklist')\n\nType: Runtime\n\nThe _linklist module is deprecated. Please use a userland alternative."
  },

  "DEP0003": {
    "en": "_writableState.buffer\n\nType: Runtime\n\nThe _writableState.buffer property is deprecated. Use the _writableState.getBuffer() method instead."
  },

  "DEP0004": {
    "en": "CryptoStream.prototype.readyState\n\nType: Documentation-only\n\nThe CryptoStream.prototype.readyState property is deprecated and should not be used."
  },

  "DEP0005": {
    "en": "Buffer() constructor\n\nType: Documentation-only\n\nThe Buffer() function and new Buffer() constructor are deprecated due to API usability issues that can potentially lead to accidental security issues.\n\nAs an alternative, use of the following methods of constructing Buffer objects is strongly recommended:\n\n* Buffer.alloc(size[, fill[, encoding]]) - Create a Buffer with initialized memory.\n* Buffer.allocUnsafe(size) - Create a Buffer with uninitialized memory.\n* Buffer.allocUnsafeSlow(size) - Create a Buffer with uninitialized memory.\n* Buffer.from(array) - Create a Buffer with a copy of array\n* Buffer.from(arrayBuffer[, byteOffset[, length]]) - Create a Buffer that wraps the given arrayBuffer.\n* Buffer.from(buffer) - Create a Buffer that copies buffer.\n* Buffer.from(string[, encoding]) - Create a Buffer that copies string."
  },

  "DEP0006": {
    "en": "child_process options.customFds\n\nType: Runtime\n\nWithin the child_process module's spawn(), fork(), and exec() methods, the options.customFds option is deprecated. The options.stdio option should be used instead."
  },

  "DEP0007": {
    "en": "cluster worker.suicide\n\nType: Runtime\n\nWithin the cluster module, the worker.suicide property has been deprecated. Please use worker.exitedAfterDisconnect instead.\n\n"
  },

  "DEP0008": {
    "en": "require('constants')\n\nType: Documentation-only\n\nThe constants module has been deprecated. When requiring access to constants relevant to specific Node.js builtin modules, developers should instead refer to the constants property exposed by the relevant module. For instance, require('fs').constants and require('os').constants."
  },

  "DEP0009": {
    "en": "crypto.pbkdf2 without digest\n\nType: End-of-life\n\nUse of the crypto.pbkdf2() API without specifying a digest was deprecated in Node.js 6.0 because the method defaulted to using the non-recommendend 'SHA1' digest. Previously, a deprecation warning was printed. Starting in Node.js 8.0.0, calling crypto.pbkdf2() or crypto.pbkdf2Sync() with an undefined digest will throw a TypeError."
  },

  "DEP0010": {
    "en": "crypto.createCredentials\n\nType: Runtime\n\nThe crypto.createCredentials() API is deprecated. Please use tls.createSecureContext() instead."
  },

  "DEP0011": {
    "en": "crypto.Credentials\n\nType: Runtime\n\nThe crypto.Credentials class is deprecated. Please use tls.SecureContext instead."
  },

  "DEP0012": {
    "en": "Domain.dispose\n\nType: Runtime\n\nDomain.dispose() is deprecated. Recover from failed I/O actions explicitly via error event handlers set on the domain instead."
  },

  "DEP0013": {
    "en": "fs async function without callback\n\nType: Runtime\n\nCalling an asynchronous function without a callback is deprecated."
  },

  "DEP0014": {
    "en": "fs.read legacy String interface\n\nType: End-of-Life\n\nThe fs.read() legacy String interface is deprecated. Use the Buffer API as mentioned in the documentation instead."
  },

  "DEP0015": {
    "en": "fs.readSync legacy String interface\n\nType: End-of-Life\n\nThe fs.readSync() legacy String interface is deprecated. Use the Buffer API as mentioned in the documentation instead."
  },

  "DEP0016": {
    "en": "GLOBAL/root\n\nType: Runtime\n\nThe GLOBAL and root aliases for the global property have been deprecated and should no longer be used."
  },

  "DEP0017": {
    "en": "Intl.v8BreakIterator\n\nType: Runtime\n\nThe Intl.v8BreakIterator is deprecated and will be removed or replaced soon."
  },

  "DEP0018": {
    "en": "Unhandled promise rejections\n\nType: Runtime\n\nUnhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code."
  },

  "DEP0019": {
    "en": "require('.') resolved outside directory\n\nType: Runtime\n\nIn certain cases, require('.') may resolve outside the package directory. This behavior is deprecated and will be removed in a future major Node.js release."
  },

  "DEP0020": {
    "en": "Server.connections\n\nType: Runtime\n\nThe Server.connections property is deprecated. Please use the Server.getConnections() method instead."
  },

  "DEP0021": {
    "en": "Server.listenFD\n\nType: Runtime\n\nThe Server.listenFD() method is deprecated. Please use Server.listen({fd: <number>}) instead."
  },

  "DEP0022": {
    "en": "os.tmpDir()\n\nType: Runtime\n\nThe os.tmpDir() API is deprecated. Please use os.tmpdir() instead."
  },

  "DEP0023": {
    "en": "os.getNetworkInterfaces()\n\nType: Runtime\n\nThe os.getNetworkInterfaces() method is deprecated. Please use the os.networkInterfaces property instead."
  },

  "DEP0024": {
    "en": "REPLServer.prototype.convertToContext()\n\nType: End-of-Life\n\nThe REPLServer.prototype.convertToContext() API is deprecated and should not be used."
  },

  "DEP0025": {
    "en": "require('sys')\n\nType: Runtime\n\nThe sys module is deprecated. Please use the util module instead."
  },

  "DEP0026": {
    "en": "util.print()\n\nType: Runtime\n\nThe util.print() API is deprecated. Please use console.log() instead."
  },

  "DEP0027": {
    "en": "util.puts()\n\nType: Runtime\n\nThe util.puts() API is deprecated. Please use console.log() instead."
  },

  "DEP0028": {
    "en": "util.debug()\n\nType: Runtime\n\nThe util.debug() API is deprecated. Please use console.error() instead."
  },

  "DEP0029": {
    "en": "util.error()\n\nType: Runtime\n\nThe util.error() API is deprecated. Please use console.error() instead."
  },

  "DEP0030": {
    "en": "SlowBuffer\n\nType: Documentation-only\n\nThe SlowBuffer class has been deprecated. Please use Buffer.allocUnsafeSlow(size) instead."
  },

  "DEP0031": {
    "en": "ecdh.setPublicKey()\n\nType: Documentation-only\n\nThe ecdh.setPublicKey() method is now deprecated as its inclusion in the API is not useful."
  },

  "DEP0032": {
    "en": "domain module\n\nType: Documentation-only\n\nThe domain module is deprecated and should not be used."
  },

  "DEP0033": {
    "en": "EventEmitter.listenerCount()\n\nType: Documentation-only\n\nThe EventEmitter.listenerCount(emitter, eventName) API has been deprecated. Please use emitter.listenerCount(eventName) instead."
  },

  "DEP0034": {
    "en": "fs.exists(path, callback)\n\n\n\nType: Documentation-only\n\nThe fs.exists(path, callback) API has been deprecated. Please use fs.stat() or fs.access() instead."
  },

  "DEP0035": {
    "en": "fs.lchmod(path, mode, callback)\n\nType: Documentation-only\n\nThe fs.lchmod(path, mode, callback) API has been deprecated."
  },

  "DEP0036": {
    "en": "fs.lchmodSync(path, mode)\n\nType: Documentation-only\n\nThe fs.lchmodSync(path, mode) API has been deprecated."
  },

  "DEP0037": {
    "en": "fs.lchown(path, uid, gid, callback)\n\nType: Documentation-only\n\nThe fs.lchown(path, uid, gid, callback) API has been deprecated."
  },

  "DEP0038": {
    "en": "fs.lchownSync(path, uid, gid)\n\nType: Documentation-only\n\nThe fs.lchownSync(path, uid, gid) API has been deprecated."
  },

  "DEP0039": {
    "en": "require.extensions\n\nType: Documentation-only\n\nThe require.extensions property has been deprecated."
  },

  "DEP0040": {
    "en": "punycode module\n\nType: Documentation-only\n\nThe punycode module has been deprecated. Please use a userland alternative instead."
  },

  "DEP0041": {
    "en": "NODE_REPL_HISTORY_FILE environment variable\n\nType: Documentation-only\n\nThe NODE_REPL_HISTORY_FILE environment variable has been deprecated."
  },

  "DEP0042": {
    "en": "tls.CryptoStream\n\nType: Documentation-only\n\nThe tls.CryptoStream class has been deprecated. Please use tls.TLSSocket instead."
  },

  "DEP0043": {
    "en": "tls.SecurePair\n\nType: Documentation-only\n\nThe tls.SecurePair class has been deprecated. Please use tls.TLSSocket instead."
  },

  "DEP0044": {
    "en": "util.isArray()\n\nType: Documentation-only\n\nThe util.isArray() API has been deprecated. Please use Array.isArray() instead."
  },

  "DEP0045": {
    "en": "util.isBoolean()\n\nType: Documentation-only\n\nThe util.isBoolean() API has been deprecated."
  },

  "DEP0046": {
    "en": "util.isBuffer()\n\nType: Documentation-only\n\nThe util.isBuffer() API has been deprecated. Please use Buffer.isBuffer() instead."
  },

  "DEP0047": {
    "en": "util.isDate()\n\nType: Documentation-only\n\nThe util.isDate() API has been deprecated."
  },

  "DEP0048": {
    "en": "util.isError()\n\nType: Documentation-only\n\nThe util.isError() API has been deprecated."
  },

  "DEP0049": {
    "en": "util.isFunction()\n\nType: Documentation-only\n\nThe util.isFunction() API has been deprecated."
  },

  "DEP0050": {
    "en": "util.isNull()\n\nType: Documentation-only\n\nThe util.isNull() API has been deprecated."
  },

  "DEP0051": {
    "en": "util.isNullOrUndefined()\n\nType: Documentation-only\n\nThe util.isNullOrUndefined() API has been deprecated."
  },

  "DEP0052": {
    "en": "util.isNumber()\n\nType: Documentation-only\n\nThe util.isNumber() API has been deprecated."
  },

  "DEP0053": { 
    "en": "util.isObject()\n\nType: Documentation-only\n\nThe util.isObject() API has been deprecated."
  },

  "DEP0054": {
    "en": "util.isPrimitive()\n\nType: Documentation-only\n\nThe util.isPrimitive() API has been deprecated."
  },

  "DEP0055": {
    "en": "util.isRegExp()\n\nType: Documentation-only\n\nThe util.isRegExp() API has been deprecated."
  },

  "DEP0056": {
    "en": "util.isString()\n\nType: Documentation-only\n\nThe util.isString() API has been deprecated."
  },

  "DEP0057": {
    "en": "util.isSymbol()\n\nType: Documentation-only\n\nThe util.isSymbol() API has been deprecated."
  },

  "DEP0058": {
    "en": "util.isUndefined()\n\nType: Documentation-only\n\nThe util.isUndefined() API has been deprecated."
  },

  "DEP0059": {
    "en": "util.log()\n\nType: Documentation-only\n\nThe util.log() API has been deprecated."
  },

  "DEP0060": {
    "en": "util._extend()\n\nType: Documentation-only\n\nThe util._extend() API has been deprecated."
  },

  "DEP0061": {
    "en": "fs.SyncWriteStream\n\nType: Runtime\n\nThe fs.SyncWriteStream class was never intended to be a publicly accessible API. No alternative API is available. Please use a userland alternative."
  },

  "DEP0062": {
    "en": "node --debug\n\nType: Runtime\n\n--debug activates the legacy V8 debugger interface, which has been removed as of V8 5.8. It is replaced by Inspector which is activated with --inspect instead."
  },

  "DEP0063": {
    "en": "ServerResponse.prototype.writeHeader()\n\nType: Documentation-only\n\nThe http module ServerResponse.prototype.writeHeader() API has been deprecated. Please use ServerResponse.prototype.writeHead() instead.\n\nNote: The ServerResponse.prototype.writeHeader() method was never documented as an officially supported API."
  },

  "DEP0064": {
    "en": "tls.createSecurePair()\n\nType: Runtime\n\nThe tls.createSecurePair() API was deprecated in documentation in Node.js 0.11.3. Users should use tls.Socket instead."
  },

  "DEP0065": {
    "en": "repl.REPL_MODE_MAGIC and NODE_REPL_MODE=magic\n\nType: Documentation-only\n\nThe repl module's REPL_MODE_MAGIC constant, used for replMode option, has been deprecated. Its behavior has been functionally identical to that of REPL_MODE_SLOPPY since Node.js v6.0.0, when V8 5.0 was imported. Please use REPL_MODE_SLOPPY instead.\n\nThe NODE_REPL_MODE environment variable is used to set the underlying replMode of an interactive node session. Its default value, magic, is similarly deprecated in favor of sloppy."
  },

  "DEP0066": {
    "en": "outgoingMessage._headers, outgoingMessage._headerNames\n\nType: Documentation-only\n\nThe http module outgoingMessage._headers and outgoingMessage._headerNames properties have been deprecated. Please instead use one of the public methods (e.g. outgoingMessage.getHeader(), outgoingMessage.getHeaders(), outgoingMessage.getHeaderNames(), outgoingMessage.hasHeader(), outgoingMessage.removeHeader(), outgoingMessage.setHeader()) for working with outgoing headers.\n\nNote: outgoingMessage._headers and outgoingMessage._headerNames were never documented as officially supported properties."
  },

  "DEP0067": {
    "en": "OutgoingMessage.prototype._renderHeaders\n\nType: Documentation-only\n\nThe http module OutgoingMessage.prototype._renderHeaders() API has been deprecated.\n\nNote: OutgoingMessage.prototype._renderHeaders was never documented as an officially supported API."
  },

  "DEP0068": {
    "en": "node debug\n\nType: Runtime\n\nnode debug corresponds to the legacy CLI debugger which has been replaced with a V8-inspector based CLI debugger available through node inspect."
  },


  "DEP0069": {
    "en": "vm.runInDebugContext(string)\n\nType: Documentation-only\n\nThe DebugContext will be removed in V8 soon and will not be available in Node 10+.\n\nNote: DebugContext was an experimental API."
  },

  "DEP0070": {
    "en": "async_hooks.currentId()\n\nType: Runtime\n\nasync_hooks.currentId() was renamed to async_hooks.executionAsyncId() for clarity.\n\nNote: change was made while async_hooks was an experimental API."
  },

  "DEP0071": {
    "en": "async_hooks.triggerId()\n\nType: Runtime\n\nasync_hooks.triggerId() was renamed to async_hooks.triggerAsyncId() for clarity.\n\nNote: change was made while async_hooks was an experimental API."
  },

  "DEP0072": {
    "en": "async_hooks.AsyncResource.triggerId()\n\nType: Runtime\n\nasync_hooks.AsyncResource.triggerId() was renamed to async_hooks.AsyncResource.triggerAsyncId() for clarity.\n\nNote: change was made while async_hooks was an experimental API."
  }

}
